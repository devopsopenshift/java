# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-pipelines-2

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: app2
  value: 'aws-cloudformation/'
  #readonly: true

stages:
  - stage: firstStage
    jobs:
      - job: readVar
        steps:
          - checkout: none
          - task: Bash@3
            displayName: "variable setter"
            name: varSet
            inputs:
              targetType: 'inline'
              script: |
                # Write your commands here
                
                FOO='somevalue'
                env - NM=V2
                echo 'ev = '$EV
                echo '##vso[task.setvariable variable=FOO;isOutput=true]'$FOO
                echo '##vso[task.setvariable variable=EV;isOutput=true]'$EV
          - task: PythonScript@0
            displayName: "print in python"
            name: printByPython
            inputs:
              scriptSource: inline
              script: |
                #code here
                print 'foo = $(varSet.FOO)'
                print 'ev = $(varSet.EV)'
      - job: printVar
        dependsOn: readVar
        variables:
         FOO : $[dependencies.readVar.outputs['varSet.FOO']]
         EV : $[dependencies.readVar.outputs['varSet.EV']]
        steps:
          - checkout: none
          - task: Bash@3
            displayName: "task in target job readVar"
            inputs:
              targetType: 'inline'
              script: |
                print 'foo = $(FOO)'
                print 'foo = '$(EV)'
              failOnStderr: true
  - template: template.yml
    parameters:
      APPLICATION : $[stageDependencies.firstStage.readVar.outputs['varSet.app']]
